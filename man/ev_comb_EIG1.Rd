% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ev_comb_EIG1.R
\name{ev_comb_EIG1}
\alias{ev_comb_EIG1}
\title{Standard Eigenvector Forecast Combination}
\usage{
ev_comb_EIG1(x)
}
\arguments{
\item{x}{An object of class 'foreccomb'. Contains training set (actual values + matrix of model forecasts) and optionally a test set.}
}
\value{
Returns an object of class 'foreccomb_res'
\itemize{
\item Method Returns the used forecast combination method.
\item Models Returns the individual input models that were used for the forecast combinations.
\item Weights Returns the combination weights obtained by applying the combination method to the training set.
\item Fitted Returns the fitted values of the combination method for the training set.
\item Accuracy_Train Returns range of summary measures of the forecast accuracy for the training set.
\item Forecasts_Test Returns forecasts produced by the combination method for the test set. Only returned if input included a forecast matrix for the test set.
\item Accuracy_Test Returns range of summary measures of the forecast accuracy for the test set. Only returned if input included a forecast matrix and a vector of actual values for the test set.
}
}
\description{
Computes forecast combination weights according to the standard eigenvector approach by Hsiao and Wan (2014) and produces forecasts for the test set, if provided.
}
\details{
The standard eigenvector approach retrieves combination weights from the sample estimated mean squared prediction error matrix 
as follows: Suppose \eqn{y_t} is a variable of interest, there are N not perfectly collinear predictors, 
\eqn{\bold{f}_t = (f_{1t}, \ldots, f_{Nt})'}, \eqn{\Sigma} is the (positive definite) 
mean squared prediction error matrix of \eqn{\bold{f}_t} and \eqn{\bold{e}} is an \eqn{N \times 1}{N * 1} vector of \eqn{(1,\ldots,1)'}. 
The N positive eigenvalues are then arranged in increasing order \eqn{(\Phi_1 = \Phi_{min}, \Phi_2, \ldots, \Phi_N)}, and \eqn{\bold{w^j}} 
is defined as the eigenvector corresponding to \eqn{\Phi_j}. The combination weights \eqn{\bold{w} = (w_1,\ldots,w_N)'} are then 
chosen corresponding to the minimum of \eqn{\left{ \frac{\Phi_1}{d_1^2}, \frac{\Phi_2}{d_2^2},\ldots,\frac{\Phi_N}{d_N^2}\right}}, 
denoted as \eqn{\bold{w}^l}, where \eqn{d_j = \bold{e}'\bold{w}^j}, as:
\deqn{\bold{w}^{EIG1} = \frac{1}{d_l} \bold{w}^l}
The results are stored in an object of class 'foreccomb_res', for which separate plot and summary functions are provided.
}
\examples{
obs <- rnorm(100)
preds <- matrix(rnorm(1000, 1), 100, 10)
train_o<-obs[1:80]
train_p<-preds[1:80,]
test_o<-obs[81:100]
test_p<-preds[81:100,]

data<-foreccomb(train_o, train_p, test_o, test_p)
ev_comb_EIG1(data)

}
\references{
Hsiao, C., and Wan, S. K. (2014). Is There An Optimal Forecast Combination? \emph{Journal of Econometrics}, \bold{178(2)}, 294--309.
}
\seealso{
\code{\link[GeomComb]{foreccomb}},
\code{\link[GeomComb]{plot.foreccomb_res}},
\code{\link[GeomComb]{summary.foreccomb_res}},
\code{\link[forecast]{accuracy}}
}
\keyword{ts}

