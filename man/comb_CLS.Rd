% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/comb_CLS.R
\name{comb_CLS}
\alias{comb_CLS}
\title{Constrained Least Squares Forecast Combination}
\usage{
comb_CLS(x)
}
\arguments{
\item{x}{An object of class 'foreccomb'. Contains training set (actual values + matrix of model forecasts) and optionally a test set.}
}
\value{
Returns an object of class 'foreccomb_res'
\itemize{
\item Method Returns the used forecast combination method.
\item Models Returns the individual input models that were used for the forecast combinations.
\item Weights Returns the combination weights obtained by applying the combination method to the training set.
\item Fitted Returns the fitted values of the combination method for the training set.
\item Accuracy_Train Returns range of summary measures of the forecast accuracy for the training set.
\item Forecasts_Test Returns forecasts produced by the combination method for the test set. Only returned if input included a forecast matrix for the test set.
\item Accuracy_Test Returns range of summary measures of the forecast accuracy for the test set. Only returned if input included a forecast matrix and a vector of actual values for the test set.
\item Input_Data Returns the data forwarded to the method.
}
}
\description{
Computes constrained least squares forecast combination weights via the \emph{ForecastCombinations} package.
}
\details{
The function \code{comb_CLS} is a wrapper around the constrained least squares (CLS) forecast combination implementation of the
\emph{ForecastCombinations} package.

Compared to the ordinary least squares forecast combination method \code{\link{comb_OLS}}, CLS forecast combination has the additional
requirement that the weights, \eqn{\mathbf{w}^{CLS} = (w_1, \ldots, w_N)'}, sum up to 1 and that there is no intercept. That is,
the combinations of \code{comb_CLS} are affine combinations.

For more information on the method, please see \link[ForecastCombinations]{Forecast_comb} from the package \emph{ForecastCombinations}.

The results are stored in an object of class 'foreccomb_res', for which separate plot and summary functions are provided.
}
\examples{
obs <- rnorm(100)
preds <- matrix(rnorm(1000, 1), 100, 10)
train_o<-obs[1:80]
train_p<-preds[1:80,]
test_o<-obs[81:100]
test_p<-preds[81:100,]

data<-foreccomb(train_o, train_p, test_o, test_p)
comb_CLS(data)

}
\seealso{
\code{\link[GeomComb]{foreccomb}},
\code{\link[GeomComb]{plot.foreccomb_res}},
\code{\link[GeomComb]{summary.foreccomb_res}},
\code{\link[forecast]{accuracy}}
}
\keyword{ts}

