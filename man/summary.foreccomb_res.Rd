% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summary.foreccomb_res.R
\name{summary.foreccomb_res}
\alias{summary.foreccomb_res}
\title{PLACEHOLDER for summary.foreccomb_res}
\usage{
\method{summary}{foreccomb_res}(x, ...)
}
\arguments{
\item{x}{An object of class 'foreccomb'. Contains training set (actual values + matrix of model forecasts) and optionally a test set.}
}
\value{
PLACEHOLDER Returns an object of class 'summary.foreccomb_res'
\itemize{
 \item Actual_Train Actual Values (Training Set).
 \item Forecasts_Train Retained (non-missing) cross-section of individual model forecasts (Training Set).
 \item Actual_Test Actual Values (Test Set). If 'newobs' was provided.
 \item Forecasts_Test Retained (non-missing) cross-section of individual model forecasts (Test Set). If 'newpreds' was provided.
 \item nmodels Number of retained (non-missing) individual model forecasts.
 \item modelnames Model Names of the retained individual forecast models -- either provided or generic names are created (see above).
}
}
\description{
Computes forecast combination weights according to the standard eigenvector approach by Hsiao and Wan (2014) and produces forecasts for the test set, if provided.
}
\details{
The standard eigenvector approach retrieves combination weights from the sample estimated mean squared prediction error matrix 
as follows: Suppose \eqn{y_t} is a variable of interest, there are N not perfectly collinear predictors, 
\eqn{\bold{f}_t = (f_{1t}, \ldots, f_{Nt})'}, \eqn{\Sigma} is the (positive definite) 
mean squared prediction error matrix of \eqn{\bold{f}_t} and \eqn{\bold{e}} is an \eqn{N \times 1}{N * 1} vector of \eqn{(1,\ldots,1)'}. 
The N positive eigenvalues are then arranged in increasing order \eqn{(\Phi_1 = \Phi_{min}, \Phi_2, \ldots, \Phi_N)}, and \eqn{\bold{w^j}} 
is defined as the eigenvector corresponding to \eqn{\Phi_j}. The combination weights \eqn{\bold{w} = (w_1,\ldots,w_N)'} are then 
chosen corresponding to the minimum of \eqn{\left{ \frac{\Phi_1}{d_1^2}, \frac{\Phi_2}{d_2^2},\ldots,\frac{\Phi_N}{d_N^2}\right}}, 
denoted as \eqn{\bold{w}^l}, where \eqn{d_j = \bold{e}'\bold{w}^j}, as:
\deqn{\bold{w}^{EIG1} = \frac{1}{d_l} \bold{w}^l}
The results are stored in an object of class 'foreccomb_res', for which separate plot and summary functions are provided.
}
\examples{
obs <- rnorm(100)
preds <- matrix(rnorm(1000, 1), 100, 10)
train_o<-obs[1:80]
train_p<-preds[1:80,]
test_o<-obs[81:100]
test_p<-preds[81:100,]

data<-foreccomb(train_o, train_p, test_o, test_p)
ev_comb_EIG1(data)

}
\references{
Hsiao, C., and Wan, S. K. (2014). Is There An Optimal Forecast Combination? \emph{Journal of Econometrics}, \bold{178(2)}, 294--309.
}
\seealso{
\code{\link[GeomComb2]{foreccomb}},
\code{\link[GeomComb2]{plot.foreccomb_res}},
\code{\link[GeomComb2]{summary.foreccomb_res}},
\code{\link[forecast]{accuracy}}
}
\keyword{ts}

